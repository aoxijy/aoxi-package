name: Build luci-app-npc for OpenWrt 24.10 Snapshot (x86_64)

on:
  workflow_dispatch: # 允许手动触发
  push:
    paths:
      - 'luci-app-npc/**'
      - 'nps/**'
    branches: [ "main", "master" ]
  pull_request:
    paths:
      - 'luci-app-npc/**'
      - 'nps/**'

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: ubuntu:22.04
      options: --privileged

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install dependencies (including zstd)
        run: |
          apt-get update
          apt-get install -y \
            build-essential \
            libncurses5-dev \
            libncursesw5-dev \
            zlib1g-dev \
            gawk \
            git \
            gettext \
            libssl-dev \
            xsltproc \
            wget \
            unzip \
            python3 \
            python3-distutils \
            file \
            zstd # 关键：安装 zstd 以解压 .tar.zst 文件

      - name: Download OpenWrt 24.10 SDK (.tar.zst format)
        run: |
          SDK_URL="https://downloads.openwrt.org/snapshots/targets/x86/64/openwrt-sdk-x86-64_gcc-14.3.0_musl.Linux-x86_64.tar.zst"
          echo "Downloading SDK from: $SDK_URL"
          wget -q --tries=3 --timeout=30 "$SDK_URL" -O openwrt-sdk.tar.zst
          
          # 检查文件是否下载成功且有效
          if [ ! -s "openwrt-sdk.tar.zst" ]; then
            echo "Error: Failed to download SDK or file is empty"
            exit 1
          fi

      - name: Extract SDK
        run: |
          # 使用 zstd 解压 .tar.zst 文件
          zstd -d -c openwrt-sdk.tar.zst | tar -x
          rm openwrt-sdk.tar.zst
          
          # 查找并重命名解压后的目录
          EXTRACTED_DIR=$(find . -maxdepth 1 -type d -name "openwrt-sdk-*" | head -1)
          if [ -z "$EXTRACTED_DIR" ]; then
            echo "Error: Could not find extracted SDK directory"
            exit 1
          fi
          mv "$EXTRACTED_DIR" openwrt-sdk
          echo "SDK extracted to: $(pwd)/openwrt-sdk"

      - name: Prepare SDK and link packages
        run: |
          cd openwrt-sdk
          
          # 链接您的包到 SDK 中（关键步骤）
          echo "Linking your packages to SDK..."
          ln -sf "$GITHUB_WORKSPACE/luci-app-npc" package/
          ln -sf "$GITHUB_WORKSPACE/nps" package/
          
          # 列出 package 目录确认链接成功
          echo "Contents of package directory after linking:"
          ls -la package/ | grep -E "(nps|luci-app-npc)"
          
          # 更新 feeds
          ./scripts/feeds update -a
          ./scripts/feeds install libc

      - name: Configure build
        run: |
          cd openwrt-sdk
          # 创建最小化配置
          cat > .config << EOF
CONFIG_TARGET_x86_64=y
CONFIG_TARGET_x86_64_Default=y
CONFIG_PACKAGE_luci-app-npc=y
CONFIG_PACKAGE_npc=y
CONFIG_PACKAGE_luci-i18n-npc-zh-cn=y
EOF
          make defconfig
          
          # 显示最终配置
          echo "Final configuration:"
          grep -E "(CONFIG_TARGET|CONFIG_PACKAGE)" .config

      - name: Build packages
        run: |
          cd openwrt-sdk
          # 清理可能的旧构建（可选，但推荐）
          make package/nps/clean 2>/dev/null || true
          
          # 编译 npc（详细输出，便于调试）
          echo "Building npc package..."
          make package/npc/compile V=sc -j$(nproc)
          
          # 编译 luci-app-npc
          echo "Building luci-app-npc package..."
          make package/luci-app-npc/compile V=sc -j$(nproc)

      - name: Check build results
        run: |
          cd openwrt-sdk
          echo "Searching for built packages..."
          find . -name "*.ipk" | grep -E "(npc|luci-app-npc)" | while read file; do
            echo "Found: $file"
            # 显示文件名中的版本信息
            basename "$file"
          done
          
          # 特别检查 npc 的版本
          NPC_IPK=$(find bin -name "npc_*.ipk" | head -1)
          if [ -f "$NPC_IPK" ]; then
            echo "=== NPC PACKAGE VERSION INFO ==="
            echo "Filename: $(basename $NPC_IPK)"
            # 尝试从控制文件中提取版本信息
            tar -xf "$NPC_IPK" control.tar.gz
            tar -xzf control.tar.gz ./control 2>/dev/null || true
            if [ -f "control" ]; then
              echo "Control file version info:"
              grep -E "Version|Package" control
              rm control control.tar.gz
            fi
          else
            echo "ERROR: Could not find npc IPK file!"
            exit 1
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: openwrt-24.10-npc-packages
          path: |
            openwrt-sdk/bin/packages/*/base/npc_*.ipk
            openwrt-sdk/bin/packages/*/base/luci-app-npc_*.ipk
            openwrt-sdk/bin/packages/*/base/luci-i18n-npc-zh-cn_*.ipk
          if-no-files-found: error
          
      - name: Show package versions summary
        run: |
          cd openwrt-sdk
          echo "=== BUILD SUMMARY ==="
          for ipk in $(find bin -name "*.ipk" | grep -E "(npc|luci-app-npc)"); do
            echo "Package: $(basename $ipk)"
          done
          echo "====================="
