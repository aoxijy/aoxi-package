name: zuizhong

on:
  workflow_dispatch: # 允许手动触发
  push:
    paths:
      - 'luci-app-npc/**'
      - 'nps/**'
    branches: [ "main", "master" ]
  pull_request:
    paths:
      - 'luci-app-npc/**'
      - 'nps/**'

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: ubuntu:22.04
      options: --privileged

    steps:
      - name: Install dependencies
        run: |
          apt-get update
          apt-get install -y \
            build-essential \
            clang \
            gawk \
            gcc-multilib \
            g++-multilib \
            gettext \
            libncurses5-dev \
            libncursesw5-dev \
            libssl-dev \
            python3-distutils \
            rsync \
            unzip \
            zlib1g-dev \
            file \
            wget \
            git \
            subversion \
            quilt \
            libelf-dev \
            zstd \
            ccache \
            python3-setuptools \
            python3-dev \
            swig \
            time \
            ecj \
            fastjar \
            java-propose-classpath \
            libxml2-utils \
            xsltproc \
            lib32z1-dev \
            libc6-dev-i386 \
            golang-go  # 添加 Go 语言工具链

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Download OpenWrt 24.10 SDK
        run: |
          SDK_URL="https://downloads.openwrt.org/snapshots/targets/x86/64/openwrt-sdk-x86-64_gcc-14.3.0_musl.Linux-x86_64.tar.zst"
          echo "Downloading SDK from: $SDK_URL"
          wget -q --tries=3 --timeout=30 "$SDK_URL" -O openwrt-sdk.tar.zst
          
          if [ ! -s "openwrt-sdk.tar.zst" ]; then
            echo "Error: Failed to download SDK or file is empty"
            exit 1
          fi

      - name: Extract SDK
        run: |
          zstd -d -c openwrt-sdk.tar.zst | tar -x
          rm openwrt-sdk.tar.zst
          
          EXTRACTED_DIR=$(find . -maxdepth 1 -type d -name "openwrt-sdk-*" | head -1)
          if [ -z "$EXTRACTED_DIR" ]; then
            echo "Error: Could not find extracted SDK directory"
            exit 1
          fi
          mv "$EXTRACTED_DIR" openwrt-sdk
          echo "SDK extracted to: $(pwd)/openwrt-sdk"

      - name: Prepare SDK and link packages
        run: |
          cd openwrt-sdk
          echo "Linking your packages to SDK..."
          ln -sf "$GITHUB_WORKSPACE/luci-app-npc" package/
          ln -sf "$GITHUB_WORKSPACE/nps" package/
          
          echo "Contents of package directory after linking:"
          ls -la package/ | grep -E "(nps|luci-app-npc)"
          
          FORCE=1 ./scripts/feeds update -a
          FORCE=1 ./scripts/feeds install libc

      - name: Download nps source and calculate hash
        run: |
          cd openwrt-sdk
          mkdir -p dl
          echo "Downloading nps source from GitHub..."
          wget -O dl/nps-0.26.26.tar.gz https://github.com/yisier/nps/archive/refs/tags/v0.26.26.tar.gz
          
          if [ ! -s "dl/nps-0.26.26.tar.gz" ]; then
            echo "Error: Failed to download nps source or file is empty"
            exit 1
          fi
          
          echo "Download successful. File info:"
          ls -la dl/nps-0.26.26.tar.gz
          echo "File size:"
          du -h dl/nps-0.26.26.tar.gz
          
          # 计算 SHA256 哈希值
          HASH_VALUE=$(sha256sum dl/nps-0.26.26.tar.gz | cut -d' ' -f1)
          echo "::notice title=SHA256 Hash Value::The SHA256 hash of nps-0.26.26.tar.gz is: $HASH_VALUE"
          echo "SHA256 hash of nps-0.26.26.tar.gz: $HASH_VALUE"
          echo "Please update this value in your nps/Makefile PKG_HASH variable"
          
          # 将哈希值保存到环境变量中，供后续步骤使用
          echo "HASH_VALUE=$HASH_VALUE" >> $GITHUB_ENV

      - name: Install and configure Go toolchain
        run: |
          cd openwrt-sdk
          echo "Installing and configuring Go toolchain..."
          
          # 检查并安装 Go 工具链
          if ! command -v go &> /dev/null; then
            echo "Go is not installed, installing..."
            apt-get update
            apt-get install -y golang-go
          fi
          
          echo "Go version:"
          go version
          
          # 设置 GOPATH 和 GOROOT
          export GOPATH=/tmp/go
          export GOROOT=/usr/lib/go
          export PATH=$GOPATH/bin:$GOROOT/bin:$PATH
          
          echo "GOPATH: $GOPATH"
          echo "GOROOT: $GOROOT"
          echo "PATH: $PATH"
          
          # 创建必要的目录
          mkdir -p $GOPATH/src $GOPATH/bin $GOPATH/pkg
          
          # 设置 Go 模块代理（可选，但可以加速下载）
          go env -w GOPROXY=https://goproxy.cn,direct
          go env -w GOSUMDB=off
          
          echo "Go environment configured"

      - name: Configure build
        run: |
          cd openwrt-sdk
          echo "CONFIG_TARGET_x86_64=y" > .config
          echo "CONFIG_TARGET_x86_64_Default=y" >> .config
          echo "CONFIG_PACKAGE_luci-app-npc=y" >> .config
          echo "CONFIG_PACKAGE_npc=y" >> .config
          echo "CONFIG_PACKAGE_luci-i18n-npc-zh-cn=y" >> .config
          
          FORCE=1 make defconfig
          
          echo "Final configuration:"
          grep -E "(CONFIG_TARGET|CONFIG_PACKAGE)" .config

      - name: Build packages
        run: |
          cd openwrt-sdk
          make package/nps/clean 2>/dev/null || true
          
          echo "Building npc package..."
          # 设置 Go 环境变量
          export GOPATH=/tmp/go
          export GOROOT=/usr/lib/go
          export PATH=$GOPATH/bin:$GOROOT/bin:$PATH
          
          FORCE=1 make package/nps/compile V=ss -j1
          
          echo "Building luci-app-npc package..."
          FORCE=1 make package/luci-app-npc/compile V=ss -j1

      - name: Check build results
        run: |
          cd openwrt-sdk
          echo "Searching for built packages..."
          find . -name "*.ipk" | grep -E "(npc|luci-app-npc)" | while read file; do
            echo "Found: $file"
            basename "$file"
          done
          
          NPC_IPK=$(find bin -name "npc_*.ipk" | head -1)
          if [ -f "$NPC_IPK" ]; then
            echo "=== NPC PACKAGE INFO ==="
            echo "Filename: $(basename $NPC_IPK)"
            # 提取控制文件信息
            tar -xf "$NPC_IPK" control.tar.gz 2>/dev/null || true
            if [ -f "control.tar.gz" ]; then
              tar -xzf control.tar.gz ./control 2>/dev/null || true
              if [ -f "control" ]; then
                echo "Control file info:"
                grep -E "Package|Version|Architecture" control
                rm control control.tar.gz 2>/dev/null || true
              fi
            fi
          else
            echo "ERROR: Could not find npc IPK file!"
            exit 1
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: openwrt-24.10-npc-packages
          path: |
            openwrt-sdk/bin/packages/*/base/npc_*.ipk
            openwrt-sdk/bin/packages/*/base/luci-app-npc_*.ipk
            openwrt-sdk/bin/packages/*/base/luci-i18n-npc-zh-cn_*.ipk
          if-no-files-found: error
          
      - name: Show hash value reminder
        run: |
          echo "::warning title=Update Your Makefile::Please update the PKG_HASH value in your nps/Makefile to: $HASH_VALUE"
          echo "REMINDER: The SHA256 hash of nps-0.26.26.tar.gz is: $HASH_VALUE"
          echo "Please update your nps/Makefile: PKG_HASH:=$HASH_VALUE"
